{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, Fragment as _Fragment, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"formInput\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"chf\"\n}, \"Valeur en CHF\", -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"form\", {\n    onSubmit: _cache[1] || (_cache[1] = _withModifiers((...args) => _ctx.convert && _ctx.convert(...args), [\"prevent\"])),\n    id: \"convertForm\"\n  }, [_createElementVNode(\"div\", _hoisted_1, [_hoisted_2, _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.chf = $event),\n    placeholder: \"Valeur en CHF\",\n    type: \"number\",\n    id: \"convertFormValue\",\n    required: \"\"\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $setup.chf]])])], 32\n  /* HYDRATE_EVENTS */\n  ), $setup.isNotNull ? (_openBlock(), _createBlock($setup[\"renderConverted\"], {\n    key: 0\n  })) : _createCommentVNode(\"v-if\", true)], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;EA+BSA,KAAK,EAAC;;;gCACPC,oBAAsC,OAAtC,EAAsC;EAA/BC,GAAG,EAAC;AAA2B,CAAtC,EAAiB,eAAjB,EAA8B;AAAA;AAA9B;;;6DAFRD,oBAMO,MANP,EAMO;IANAE,QAAM,wDAAUC,qCAAV,EAAiB,WAAjB,EAMN;IANyBC,EAAE,EAAC;EAM5B,CANP,GACIJ,oBAIM,KAJN,cAIM,CAHFK,UAGE,kBAFFL,oBAA8F,OAA9F,EAA8F;+DAA9EM,aAAGC,OAA2E;IAAzEC,WAAW,EAAC,eAA6D;IAA7CC,IAAI,EAAC,QAAwC;IAA/BL,EAAE,EAAC,kBAA4B;IAATM,QAAQ,EAAR;EAAS,CAA9F;;EAAA,kBAAgBJ,aAEd,CAJN,EADJ;;EAAA,GAQuBA,kCAAvBK,aAAoDL,yBAApD,EAAoD;IAAAM;EAAA,CAApD","names":["class","_createElementVNode","for","onSubmit","_ctx","id","_hoisted_2","$setup","$event","placeholder","type","required","_createBlock","key"],"sourceRoot":"","sources":["C:\\Users\\Xy\\Documents\\_Code\\VueJS\\vue-converter\\src\\components\\formComponent.vue"],"sourcesContent":["<script setup>\r\nimport { ref, watchEffect } from \"vue\";\r\n\r\nimport renderConverted from './renderConverted.vue';\r\n\r\nconst chf = ref(0);\r\nlet isNotNull = ref(false);\r\n\r\nfetch('https://cdn.jsdelivr.net/gh/fawazahmed0/currency-api@1/latest/currencies/chf.json')\r\n.then(resp=>resp.json())\r\n.then(chfChangeRate => {\r\n    console.log(chfChangeRate)\r\n    console.log(chfChangeRate.chf.eur)\r\n    let euChangeRate = chfChangeRate.chf.eur\r\n})\r\n\r\n\r\nwatchEffect(()=>{\r\n    console.log(chf.value)\r\n    if(chf.value>0){\r\n        isNotNull.value = true;\r\n        renderConverted.textContent = euChangeRate\r\n    } else {\r\n        isNotNull.value = false;\r\n    }\r\n\r\n})\r\n</script>\r\n\r\n<template>\r\n<form @submit.prevent=\"convert\" id=\"convertForm\">\r\n    <div class=\"formInput\">\r\n        <label for=\"chf\">Valeur en CHF</label>\r\n        <input v-model=\"chf\" placeholder=\"Valeur en CHF\" type=\"number\" id=\"convertFormValue\" required>\r\n\r\n    </div>\r\n</form>\r\n\r\n<renderConverted v-if=\"isNotNull\"></renderConverted>\r\n</template>\r\n"]},"metadata":{},"sourceType":"module"}