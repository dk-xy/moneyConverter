{"ast":null,"code":"import { createVNode as _createVNode, createTextVNode as _createTextVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createTextVNode(\" Hello \");\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _createVNode($setup[\"formComponent\"])], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;;;;yEAsBAA,aAA+BC,uBAA/B","names":["_createVNode","$setup"],"sourceRoot":"","sources":["C:\\Users\\Xy\\Documents\\_Code\\VueJS\\vue-converter\\src\\App.vue"],"sourcesContent":["<script setup>\n\n\nimport formComponent from './components/formComponent.vue';\n\nVue.filter('toCurrency', function (value) {\n    if (typeof value !== \"number\") {\n        return value;\n    }\n    var formatter = new Intl.NumberFormat('en-US', {\n        style: 'currency',\n        currency: 'USD'\n    });\n    return formatter.format(value);\n});\n\n</script>\n\n\n\n<template>\nHello\n<formComponent></formComponent>\n\n</template>\n\n\n\n<style>\n\n</style>\n"]},"metadata":{},"sourceType":"module"}